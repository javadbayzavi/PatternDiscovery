#pragma checksum "E:\PatternDiscovery\discovery\Views\result\getRankofPatternsInCategory.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a64349f568a1b20da8abf8b7fe49dee02ebb4920"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_result_getRankofPatternsInCategory), @"mvc.1.0.view", @"/Views/result/getRankofPatternsInCategory.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a64349f568a1b20da8abf8b7fe49dee02ebb4920", @"/Views/result/getRankofPatternsInCategory.cshtml")]
    public class Views_result_getRankofPatternsInCategory : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""card card-blue h-100"">
    <div class=""card-header"">
        <h3 class=""card-title"">Authors who interested in patterns</h3>

        <div class=""card-tools"">
            <button type=""button"" class=""btn btn-tool"" data-card-widget=""collapse"">
                <i class=""fas fa-minus""></i>
            </button>
            <button type=""button"" class=""btn btn-tool"" data-card-widget=""remove"">
                <i class=""fas fa-times""></i>
            </button>
        </div>
    </div>
    <div class=""card-body"">
        ");
#nullable restore
#line 15 "E:\PatternDiscovery\discovery\Views\result\getRankofPatternsInCategory.cshtml"
   Write(Html.DropDownList("rnkforcategories", discovery.Models.patternsviewmodel.getCategories(), "Select on of the following categories", new { @class = "formm-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        <canvas id=""barRankOfPatternInCategoriesChart"" style=""min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;""></canvas>
    </div>
    <!-- /.card-body -->
</div>
<script>
    function drawRankofPtrnInCatChart(chartData) {
        var barLabels = [];
        var barData = [];

        for (let index = 0; index < chartData.length; index++) {
            //Caculation of others
            //if (index > 9) {
            //    if (index == 10) {
            //        barLabels.push(""Others"");
            //        barData.push(chartData[index].count);
            //    }
            //    else
            //        barData[10] += chartData[index].count;
            //}
            //else {
            barLabels.push(chartData[index].pattern);
            barData.push(chartData[index].count);
            //}
        }

        var Data = {
            labels: barLabels,
            datasets: [
                {
                    label: 'Patterns',
          ");
            WriteLiteral(@"          backgroundColor: 'rgba(60,141,188,0.9)',
                    borderColor: 'rgba(60,141,188,0.8)',
                    pointRadius: true,
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: barData
                },
            ]
        }

        var barChartCanvas = $('#barRankOfPatternInCategoriesChart').get(0).getContext('2d')
        var barChartData = $.extend(true, {}, Data);
        barChartData.datasets[0] = Data.datasets[0];
        var barOptions = {
            maintainAspectRatio: false,
            responsive: true,
            datasetFill: false,
        }

        new Chart(barChartCanvas, {
            type: 'bar',
            data: barChartData,
            options: barOptions
        });

    }
    function loadRankinCatChart(id) {
        $.ajax({
            type");
            WriteLiteral(@": ""GET"",
            url: '/api/chart/getPatternRankinCategory/' + id,
            contentType: ""application/json"",
            dataType: ""json"",
            success: function (chData) {
                drawRankofPtrnInCatChart(chData);
            }
        });
    }


    $('#rnkforcategories').change(function () {
        if (this.value)
            loadRankinCatChart(this.value);
    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
